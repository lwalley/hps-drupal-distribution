/**
 * @file
 * Positioning for responsive layout.
 *
 * Uses the Zen Grids plugin for Compass: http://zengrids.com
 */

@import "base";

//
// Default settings for all layouts.
//
// @note Mobile first approach so by default we have styles specific to mobile phones, basically
//       anything with a max-width < 480px. We start with a single column layout.
//
#page,
.region-bottom {
  // Center content if we later apply max width.
  margin-left: auto;
  margin-right: auto;
}

/**
 * Container for grid items and flow items.
 */
#page {
  @include zen-grid-container();
}

//
// Manually apply the shared properties of grid items in a single, efficient ruleset.
// In other words don't use $zen-auto-include-item-base.
//
#header,
#content,
#navigation,
.region-sidebar-first,
.region-sidebar-second,
#footer {
  @include zen-grid-item-base();
}

#header {
  #name-and-slogan {
    h1 {
      @include leader(1, $h1-font-size);
    }
  }
  a#logo {
    @include adjust-font-size-to($h1-font-size);
    @include adjust-leading-to(3, $h1-font-size);
    @include leader(1, $h1-font-size);
    margin-right: rhythm(1, $h1-font-size);
    img {
      max-height: rhythm(3, $h1-font-size);
    }
  }
}

#navigation,
#secondary-menu {
  .block-menu .block-title,
  .block-menu-block .block-title {
    @include element-invisible();
  }
  ul {
    padding-left: 0;
  }
}


#main,
#content,
#footer,
#secondary-menu {
  @include zen-clear();
}

// Position navigation bar above content for screens wide enough to handle it.
// By default it is below content.
@media all and (min-width: 600px) {

  #header {
    #secondary-menu {
      float: right;
      clear: none;
      ul {
        @include adjust-leading-to(3);
        @include delimited-list('|');
      }
    }
  }
  #main {
    // Move all the children of #main down to make room.
    padding-top: rhythm(3);
    position: relative;
  }
  #navigation {
    // Move the navbar up inside #main's padding.
    // @see navigation.scss
    position: absolute;
    top: 0;
    width: $zen-grid-width;
    ul {
      @include adjust-leading-to(3);
      @include inline-block-list();
    }
  }
}

// Start of media queries, taking layout beyond single column.
// @note Aim is to maintain golden ratio whilst preserving the readability of the content.
//       We do this, depending on screen size, by:
//         1. limiting the max width of all content (for readability don't want much more than ~15 words per line)
//         2. filling extra space with (a) wider columns, and/or (b) more columns.


// Screen sizes that can handle two columns underneath main content.
@media all and (min-width: 600px) and (max-width: 719px) {
  $zen-column-count:  2;
  .two-sidebars {
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }
    .region-sidebar-second {
      @include zen-grid-item(1, 2);
    }
  }
}

// Screen sizes that can handle one extra column adjacent to content, rest underneath.
@media all and (min-width: 720px) and (max-width: 1199px) {
  $zen-column-count:  3;
  #header,
  #navigation,
  #footer {
    @include zen-grid-item(3, 1);
  }
  .no-sidebar {
    #content {
      @include zen-grid-item(2, 1);
    }
  }
  // Golden ratio layout when we have content and one sidebar (first or second).
  .one-sidebar {
    #content {
      @include zen-grid-item(2, 1);
    }
    .region-sidebar-first,
    .region-sidebar-second {
      @include zen-grid-item(1, 3);
    }
  }
  // Golden ratio layout when we have content and two sidebars, with second sidebar underneath.
  .two-sidebars {
    #content {
      @include zen-grid-item(2, 1);
    }
    .region-sidebar-first {
      @include zen-grid-item(1, 3);
    }

    // Span all columns with the second sidebar, and grid the descendent .block containers instead.
    .region-sidebar-second {
      @include zen-grid-item(3, 1);
      @include zen-nested-container();
      @include zen-clear(); /* Start new row */

      .block {
        @include zen-grid-item-base();
      }
      .block:nth-child(3n+1) {
        @include zen-grid-item(1, 1);
        @include zen-clear(); /* Start a new row */
      }
      .block:nth-child(3n+2) {
        @include zen-grid-item(1, 2);
      }
      .block:nth-child(3n) {
        @include zen-grid-item(1, 3);
      }
    }
  }
}
// Still with one extra column but we use columns in addition to gutters for more fluid whitespace.
@media all and (min-width: 1200px) and (max-width: 1999px) {
  $zen-column-count:  24;
  #header,
  #navigation,
  #footer {
    @include zen-grid-item(20, 3);
  }

  // @todo figure out good way to handle .no-sidebars to prevent jumping about when switch between no sidebars and sidebars
  .no-sidebar {
    #content {
      @include zen-grid-item(12, 3);
    }
  }

  // Golden ratio (ish) layout when we have content and one sidebar (first or second).
  .one-sidebar {
    #content {
      @include zen-grid-item(12, 3);
    }
    .region-sidebar-first,
    .region-sidebar-second {
      @include zen-grid-item(7, 16);
    }
  }

  // Golden ratio layout when we have content and two sidebars, with second sidebar underneath.
  .two-sidebars {
    #content {
      @include zen-grid-item(12, 3);
    }
    .region-sidebar-first {
      @include zen-grid-item(7, 16);
    }

    // Span all columns with the second sidebar, and grid the descendent .block containers instead.
    .region-sidebar-second {
      @include zen-grid-item(20, 3);
      @include zen-nested-container();
      @include zen-clear(); /* Start new row */

      .block {
        @include zen-grid-item-base();
      }
      .block:nth-child(3n+1) {
        @include zen-grid-item(6, 3);
        @include zen-clear(); /* Start a new row */
      }
      .block:nth-child(3n+2) {
        @include zen-grid-item(6, 10);
      }
      .block:nth-child(3n) {
        @include zen-grid-item(6, 17);
      }
    }
  }
}

// Screen sizes that can handle two extra columns.
// We use columns in addition to gutters for whitespace between columns.
@media all and (min-width: 2000px) {
  $zen-column-count:  27;
  #header,
  #navigation,
  #footer {
    @include zen-grid-item(19, 5);
    @include zen-nested-container();
    @include zen-clear();
  }

  .no-sidebar {
    #content {
      @include zen-grid-item(11, 5);
    }
  }

  .one-sidebar {
    #content {
      @include zen-grid-item(11, 5);
    }
    .region-sidebar-first,
    .region-sidebar-second {
      @include zen-grid-item(4, 17);
    }
  }

  .two-sidebars {
    #content {
      @include zen-grid-item(11, 5);
    }
    .region-sidebar-first {
      @include zen-grid-item(4, 17);
    }
    .region-sidebar-second {
      @include zen-grid-item(3, 21);
    }
  }
}

