<?php

/**
 * @file dspaced.module
 * Contains implementations of core Drupal hooks and shared helper functions for
 * DSpaced module.
 *
 * @note Implementations of Feeds hooks and helper functions for imports and
 * clearances are stored in include file dspaced.feeds.
 * @see dspaced.feeds.inc
 */

/**
 * Implements hook_views_api().
 */
function dspaced_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'dspaced') . '/includes/views',
  );
}

/**
 * Implements hook_ctools_plugin_api().
 */
function dspaced_ctools_plugin_api($module = '', $api = '') {
  if ($module == "feeds" && $api == "feeds_importer_default") {
    return array("version" => 1);
  }
}

/**
 * Implements hook_hook_info().
 */
function dspaced_hook_info() {

  return array(
    'dspaced_item_feeds_importer_fields_alter' => array(
      'group' => 'dspaced',
    )
  );
}

/**
 * TODO: Implements hook_help().
 * /
function dspaced_help($section) {}
//*/
/**
 * Implements hook_permission().
 */
function dspaced_permission() {
  return array(
    'administer dspaced' => array(
      'title' => t('Administer DSpaced'),
      'description' => t('Configure run and monitor DSpace imports.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function dspaced_menu() {
  $items = array();
  $items['admin/config/dspaced'] = array(
    'title' => 'DSpaced',
    'description' => 'Do stuff with DSpace',
    'position' => 'right',
    'weight' => 100,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/dspaced/settings'] = array(
    'title' => 'Settings',
    'description' => 'Configure repository connections.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dspaced_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'dspaced.admin.inc',
  );
  return $items;
}

/**
 * Helper function to return dspace repository's REST URL.
 *
 * @return string
 *   Empty string or REST API base URL from system variable
 *   dspaced_repository_rest_baseurl which is set by user in DSpaced system
 *   settings form.
 */
function _dspaced_repository_rest_baseurl() {
  return variable_get('dspaced_repository_rest_baseurl', '');
}

/**
 * Helper function to return selected dspace community ids.
 *
 * @return array
 *   User selected DSpace community entity ids, extracted and flattened from the
 *   system variable array dspaced_community_dspace_entity_ids which is set by
 *   user in DSpaced system settings form.
 */
function _dspaced_selected_community_dspace_entity_ids() {
  $selected_ids = array();
  $dspaced_community_dspace_enitity_ids =
    variable_get('dspaced_community_dspace_entity_ids', array());
  foreach($dspaced_community_dspace_enitity_ids as $id => $selected) {
    if ($selected) $selected_ids[] = $id;
  }
  return $selected_ids;
}

/**
 * Helper function to find a community node given a DSpace entity id.
 *
 * @param int $community_dspace_entity_id
 *   The DSpace entity ID of a community.
 * @param bool $nid_only
 *  (optional) Whether to return full node object or just the node id.
 * @return array
 *   Drupal nodes with type dspace_entities_community and DSpace entity id
 *   matching $community_dspace_entity_id.
 *
 * @todo Refactor into find_by so it's clearer, and maybe don't return the full
 *   node here?
 */
function _dspaced_find_community_node($community_dspace_entity_id, $nid_only = FALSE) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'dspaced_entities_community')
    ->fieldCondition('dspace_entity_id', 'value',
        intval($community_dspace_entity_id), '=')
    ->range(0,1); // There should only be one
  $results = $query->execute();
  if (array_key_exists('node', $results) && ($node = reset($results['node']))) {
    return $nid_only ? $node->nid : node_load($node->nid);
  }
  return FALSE;
}

/**
 * Helper function to return all community nodes.
 *
 * @param array $community_dspace_entity_ids
 *   (optional) DSpace entity IDs for communty nodes to find. If ommitted all
 *   community nodes will be returned.
 *
 * @todo Refactor into a find_by so it's clearer, and maybe don't return all
 *   nodes here?
 *
 * @return array
 *   Drupal nodes with type dspace_entities_community.
 */
function _dspaced_find_community_nodes($community_dspace_entity_ids = array()) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'dspaced_entities_community');
  if ($community_dspace_entity_ids) {
    $query->fieldCondition('dspace_entity_id', 'value',
      (array) $community_dspace_entity_ids, 'IN');
  }
  $results = $query->execute();
  if (array_key_exists('node', $results)) {
    $results = node_load_multiple(array_keys($results['node']));
  }
  return $results;
}

